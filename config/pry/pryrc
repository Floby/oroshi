# Add current directory to path
$: << '.'

# PROMPT
# ======
# Display Ruby version in prompt
# FIXME : Adding colors to prompt cause display bugs. Removing it for now
Pry.prompt = [
	proc {
		|obj, nest_level, _|
			# prompt = "#{RUBY_VERSION} (#{obj}):#{nest_level} >"
			# prompt = "\001\e[01m\002#{RUBY_VERSION}\001\e[0m\002"
			prompt = ""
			prompt += "\001\e[01;38;5;202m\002"
			prompt += "#{RUBY_VERSION} "
			prompt += "\001\e[0m\002"


			# prompt += "\001\e[38;5;35m\002"
			# prompt += "(#{obj})"
			# prompt += "\001\e[0m\002"

			# prompt += "\001\e[38;5;24m\002"
			# prompt += ":#{nest_level} "
			# prompt += "\001\e[0m\002"

			# prompt += "\001\e[01;38;5;252m\002"
			# prompt += "> "
			# prompt += "\001\e[0m\002"
	},
	proc {
		|obj, nest_level, _|
			prompt = "#{RUBY_VERSION} (#{obj}):#{nest_level} *"
			# prompt = "\e[01;38;5;202m#{RUBY_VERSION}\e[0m \e[38;5;35m(#{obj})\e[0m\e[38;5;24m:#{nest_level}\e[0m \e[01;38;5;241m* \e[0m"
	}
]


# PRETTY PRINT
# ============
# Display all output through Awesome Print. See ~/.aprc for more color
# configuration
begin
	require 'awesome_print'
	Pry.config.print = proc {
		|output, value| 
			Pry::Helpers::BaseHelpers.stagger_output("=> #{value.ai}", output)
		}
end

# COLORING
# ========
# Just to load needed files
CodeRay.scan("example", :ruby).term
# Color definitions
TERM_TOKEN_COLORS = {
	# Comment
	:comment => '38;5;241',

	# String
	:string => {
		:self => '38;5;67',
		:modifier => '46',
		:escape => '46',
		:delimiter => '38;5;67',
	},
	# Regexp
	:regexp => {
		:self => '38;5;24',
		:content => '38;5;24',
		:delimiter => '38;5;24',
		:modifier => '01;38;5;24',
		:function => '46'
	},
	# Numbers
	:float => '01;38;5;69',
	:integer => '01;38;5;69',
	# Symbols
	:symbol => '38;5;166',
	# Boolean
	:predefined_constant => '38;5;209',

	# Variables
	:variable => '46',
	:local_variable => '38;5;35',
	:class_variable => '01;38;5;209',
	:global_variable => '01;38;5;35',
	:constant => '01;38;5;209',

	# Functions
	:include => '38;5;184',
	:function => '38;5;108',
	:preprocessor => '38;5;184',

	# Class
	:class => '38;5;202',



	:attribute_name => '45',
	:attribute_value => '45',
	:binary => '45',
	:char => {
		:self => '45',
		:delimiter => '45'
	},
	:color => '45',
	:complex => '45',
	:decoration => '45',
	:definition => '45',
	:directive => ['45', '45'],
	:doc => '45',
	:doctype => '45',
	:doc_string => ['45', '45'],
	:entity => '45',
	:error => ['45', '45'],
	:exception => '45',
	:hex => '45',
	:key => '45',
	:label => '45',
	:octal => '45',
	:operator_name => '45',
	:predefined_type => '45',
	:predefined => ['45', '45'],
	:pseudo_class => '45',
	:reserved => '45',
	:shell => {
		:self => '45',
		:content => '45',
		:delimiter => '45',
	},
	:tag => '45',
	:type => '45',
	:value => '45',
	:insert => '45',
	:delete => '45',
	:change => '45',
	:head => '45'
}
# Overriding colors
module CodeRay
	module Encoders
		class Terminal < Encoder
			TERM_TOKEN_COLORS.each_pair do |key, value|
				TOKEN_COLORS[key] = value
			end
		end
	end
end
