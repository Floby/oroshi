#compdef git-reset
# This completion function overrides the _git-reset method defined in the main
# _git method to add completion for `git reset HEAD` suggesting files in the
# staging area. This is particularly useful with my alias `git unstage`.

_git-reset () {
  local curcontext=$curcontext state line
  typeset -A opt_args

  _arguments -C -S -A '-*' \
      '(-q --quiet)'{-q,--quiet}'[be quiet, only report errors]' \
      '::commit:__git_revisions' \
    - reset-head \
      '(        --soft --hard --merge --keep)--mixed[reset the index but not the working tree (default)]' \
      '(--mixed        --hard --merge --keep)--soft[do not touch the index file nor the working tree]' \
      '(--mixed --soft        --merge --keep)--hard[match the working tree and index to the given tree]' \
      '(--mixed --soft --hard         --keep)--merge[reset out of a conflicted merge]' \
      '(--mixed --soft --hard --merge       )--keep[like --hard, but keep local working tree changes]' \
    - reset-paths \
      '(-p --patch)'{-p,--patch}'[select diff hunks to remove from the index]' \
      '*::file:->files' && ret=0

  case $state in
    (files)
      local commit
      if [[ -n $line[1] ]] && __git_is_committish $line[1]; then
        commit=$line[1]
      else
        commit=HEAD
      fi
			# Suggest files in index if `git reset HEAD`
			if [[ $line[1] = HEAD ]]; then
				# I was looking for hours for a method named __git_staged_files, but it
				# seems that it is __git_changed_files that did the trick. It will only
				# suggest files in the staging area.
				__git_changed_files
			else
				__git_tree_files . $commit
			fi
			ret=0
      ;;
  esac
}

_git-reset "$@"
