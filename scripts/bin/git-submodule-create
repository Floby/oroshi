#!/usr/bin/env zsh
# Will add a new submodule to a repo.
# Default `git submodule add` requires to be run from the git root. This
# wrapper will not need it.
# This wrapper will also allow either `path directory` or `directory path`

local repositoryUrl=$1
local filepath=$2

# Need at least one argument
if ! [ -n "$1" ]; then
  echo "✘ You must pass at least the repository url"
  exit 1
fi

# Only a repo url, then the filepath is the current path
if ! [ -n "$2" ]; then
  filepath=$(readlink -f $(pwd))
fi

# Did we messed up repo and filepath ?
# We'll just swap them if not set in the right order
if ! [ -d $filepath ]; then
  local tmp=$filepath
  filepath=$repositoryUrl
  repositoryUrl=$tmp
fi

# Getting the directory name of the submodule from the url
local dirname
dirname=$(echo ${repositoryUrl:t} | sed 's/\.git$//')

# Getting the full path of the submodule
local fullPath
fullPath=$(readlink -f $filepath)

# Getting the git root path
cd $filepath
local gitRoot
gitRoot=$(git rev-parse --show-toplevel)

# Getting the submodule path, relative to the git root
local relativePath
relativePath=$(python -c "import os.path; print os.path.relpath('$fullPath', '$gitRoot')")

# Adding subrepo
cd $gitRoot
git submodule add $repositoryUrl "$relativePath/$dirname"
echo "✔ $dirname submodule added"
