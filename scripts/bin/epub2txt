#!/usr/bin/env ruby
# encoding : utf-8
# Given an epub file, will create a txt file version and extract the cover
# image

require 'fileutils'

if `which ebook-convert` == ''
	puts "Unable to find ebook-convert, please install calibre"
	exit
end

# Expand all paths
files = ARGV.collect do |a|
	File.expand_path(a)
end

# Loop on each file
files.each do |file|
	ext = File.extname(file)
	dirname = File.dirname(file)
	basename = File.basename(file)
	coverFile = file.gsub(/\.epub$/, '.jpg')
	txtFile = file.gsub(/\.epub$/, '.txt')

	next unless ext == '.epub'

	Dir.chdir(dirname)

	puts "Converting #{basename}"

	# Extract cover
	unless File.exists?(coverFile)
		puts "Searching for cover (this could take a while)..."

		%x[ebook-convert "#{file}" html]
		
		htmlDir = File.join(dirname, 'html')
		extractedCoverFile = File.join(htmlDir, 'calibre_raster_cover.jpg')
		if File.exists?(extractedCoverFile)
			puts "Cover found!"
			File.rename(extractedCoverFile, coverFile)
			FileUtils.rm_r(htmlDir)
		end
	else
		puts "Cover file already present"
	end
	
	# Convert to txt
	unless File.exists?(txtFile)
		puts "Converting to txt"
		%x[ebook-convert "#{file}" "#{txtFile}"]
	else
		puts "txt file already present"
	end

end
