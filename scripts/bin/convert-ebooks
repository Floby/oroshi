#!/usr/bin/zsh
# Will find all ebooks in the current dir and subdirs and convert them to the
# epub format.
# The original files will be moved in a compress-backup folder

# Check for dependencies
if [[ `which ebook-convert` = '' ]]; then
	echo "ebook-convert not found, please sudo apt-get install calibre"
	return
fi

# We create a directory to backup the source files
mkdir -p ./compress-backup
# FIXME : Nasty little trick to prevent the globing to return an error if no
# file found
cd ./compress-backup
touch tmp.mobi tmp.lit tmp.pdf tmp.prc
cd ..

# Main function to convert to an epub
function convertToEpub() {
	# ./filepath/filename.ext
	local filepath=$1
	# ./filepath/filename
	local basepath=${filepath:r}
	# filename.ext
	local filename=${filepath:t}
	# filename
	local basename=${filepath:t:r}
	# ext
	local extension=${filepath:e}

	# Skipping backup directories
	if [[ $filepath =~ '/compress-backup/' ]]; then
		return
	fi

	# Only convert if no epub found
	if [[ ! -r ${basepath}.epub ]]; then
		echo "Converting $filename to .epub"
		ebook-convert $filepath ${basepath}.epub
	else 
		echo "$filename is already converted to .epub"
	fi

	# Move source to backup folder, keeping hierarchy
	echo "Backing up $filename"
	cp --parents $filepath ./compress-backup/
	rm $filepath
}



# We convert in order of source priority
for filepath in ./**/*.mobi; do	convertToEpub $filepath; done
for filepath in ./**/*.lit; do convertToEpub $filepath; done
for filepath in ./**/*.pdf; do convertToEpub $filepath; done
for filepath in ./**/*.prc; do convertToEpub $filepath; done

# FIXME : Cleaning nasty trick.
cd ./compress-backup/
rm tmp.mobi tmp.lit tmp.pdf tmp.prc

