#!/usr/bin/env ruby
require 'English'
require 'fileutils'
require 'open3'
require 'shellwords'
# This is a wrapper around tidy, to make it:
# - Only display the actual errors (not fixing anything)
# - Use a default set of options
# - Further hide errors that cannot be disabled through the options
class Tidy
  def initialize(*args)
    @input = File.expand_path(args.last)
    @tidycheckrc = File.expand_path('~/.tidycheckrc')

    unless File.exist?(@tidycheckrc)
      puts "Unable to find #{@tidycheckrc}"
      exit
    end
  end

  def run_command
    @errors = []
    options = [
      "-config #{@tidycheckrc}",
      '-e',
      '-q',
      '-utf8',
      @input.shellescape
    ]

    command = "tidy #{options.join(' ')}"

    _, output, status = Open3.capture3(command)

    return if status.success?

    @errors = filtered_errors(output)
  end


  # Remove useless errors from the list
  def filtered_errors(errors)
    list = errors.split("\n").uniq

    list.reject! do |line|
      # See syntastic/syntax_checkers/html/tidy.vim for a more complete list
      # of errors that are safe to ignore
      next true if line.include?('is not approved by W3C')
      next true if line.include?('inserting implicit <body>')

      next true if line.include?('proprietary attribute "ng-')
      next true if line.include?('proprietary attribute "data-')

      # Allowing images without `alt`
      next true if line.include?('<img> lacks "alt" attribute')
      # Allowing non-escaped "&" in urls
      next true if line.include?('unescaped & or unknown entity')
      next true if line.include?('<a> escaping malformed URI reference')
      # Allowing any attribute on iframes
      next true if line.include?('<iframe> attribute')
      # Allowing SVG attributes
      next true if line.include?('<svg> proprietary attribute')

      # Presentation classes
      next true if line =~ /trimming empty/
    end

    return list
  end

  def run
    run_command

    # Everything went well
    exit 0 if @errors.empty?

    puts @errors
  end
end
Tidy.new(*ARGV).run
