#!/usr/bin/env ruby
require_relative '../etc/apt-get-helper/apt-get-helper'

# Find all packages matching the keyword given
class AptGetSearch
  include AptGetHelper

  def initialize(keyword)
    @search_list = search(keyword)
  end

  def search(keyword)
    raw = `apt-cache search #{keyword}`
    results = []
    raw.each_line do |line|
      name, description = line.chomp.match(/^([^ ]*) - (.*)$/).captures
      # Keep only packages which name matches what we asked for
      next unless name.include?(keyword)

      results << {
        name: name,
        description: description
      }
    end

    results.sort_by { |result| result[:name] }
  end

  def run
    longest_name = longest_by_type(@search_list, :name)

    @search_list.each do |result|
      package = result[:name]

      unless installed?(package)
        puts "  #{package}"
        next
      end

      current_version = get_current_version(package)
      version = current_version
      color = :success

      # Mark element if not latest version
      max_version = get_max_available_version(package)
      if current_version != max_version
        version << " / #{max_version}"
        color = :outdated
      end

      version = colorize(current_version, :version)
      name = colorize('âœ” ' + package.ljust(longest_name.size), color)
      puts "#{name}  #{version}"
    end
  end
end
AptGetSearch.new(*ARGV).run
